asyncapi: '2.6.0'
info:
  title: Account Service
  version: 1.0.0
  description: This service is in charge of processing user service
servers: 
  development:
    url: amqp://localhost:{port}
    protocol: amqp
    protocolVersion: "0.9.1"
    description: This our development broker.
    variables:
      port:
        enum:
          - '15672'
          - '5672'
defaultContentType: application/json
channels:
  user/signup:
    publish:
      operationId: signup
      message:
        $ref: '#/components/messages/userSignUp'
      bindings:
        amqp:
          cc: ['signupKey']
          timestamp: true
          ack: false
          bindingVersion: 0.2.0
    bindings:
      $ref: '#/components/channelBindings/userExchange'
  user/login:
    publish:
      operationId: login
      message:
        $ref: '#/components/messages/userLogIn'
      bindings:
        amqp:
          cc: ['loginKey']
          timestamp: true
          ack: false
          bindingVersion: 0.2.0
    bindings:
      $ref: '#/components/channelBindings/userExchange'
  user/queue:
    bindings:
      $ref: '#/components/channelBindings/tempExchange'
    subscribe: 
      operationId: userQueue
      message: 
        name: userQueue
        messageId: userQueue
        payload: 
          type: object
          properties:
            reqId:
              $ref: '#/components/schemas/uuid'
            status: 
              type: object
              description: Status code and message for the queue
              properties:
                code:
                  type: integer
                message: 
                  type: string
      bindings:
        amqp:
          cc: ['temp.user']
          timestamp: true
          ack: false
          bindingVersion: 0.2.0

components:
  messages:
    userSignUp:
      messageId: userSignUp
      name: userSignUp
      payload:
        type: object
        properties:
          displayName:
            type: string
            description: Name of the user
          email:
            type: string
            format: email
            description: Email of the user
          password: 
            type: string
            description: Password of the user
    userLogIn:
      name: userLogIn
      payload:
        type: object
        properties:
          email:
            type: string
            format: email
            description: Email of the user
  channelBindings:
    userExchange:
      amqp:
        is: routingKey
        queue:
          name: user
          durable: true
          exclusive: true
          autoDelete: false
          vhost: /
        exchange:
          name: userExchange
          type: direct
          durable: true
          autoDelete: false
          vhost: /
        bindingVersion: 0.2.0
    tempExchange:
      amqp:
        is: routingKey
        queue:
          name: tempQueue
          durable: true
          exclusive: true
          autoDelete: false
          vhost: /
        exchange:
          name: tempExchange
          type: topic
          durable: true
          autoDelete: false
          vhost: /
        bindingVersion: 0.2.0
  schemas:
     uuid:
       type: string
       format: uuid
       description: A UUID (Universally Unique Identifier) is a 128-bit number used to identify information in computer systems.